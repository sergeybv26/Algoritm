"""
 Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
 заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.

Примечания:

● алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,

● постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""

from random import randrange

START_NUM = -100
END_NUM = 100
SIZE = 20


def bubbles_sort(arr):
    """
    :param arr: На вход подается не сортированный список чисел
    :return: Возвращает отсортированный список
    """
    len_array = len(arr)
    n = 1

    while n < len_array:
        flag = 0
        for i in range(len_array - n):
            if arr[i] < arr[i + 1]:
                arr[i], arr[i + 1] = arr[i + 1], arr[i]
                flag = 1
        if not flag:
            break
        n += 1
    return arr


array = [randrange(START_NUM, END_NUM) for _ in range(SIZE)]

print(f'Исходный массив: {array}')
print(f'Отсортированный массив: {bubbles_sort(array)}')
